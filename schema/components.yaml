components:
  schemas:
    Id:
      description: Unique resource identifier
      type: integer
    User:
      type: object
      required:
        - id
        - phone
        - owner
        - email
      properties:
        id:
          $ref: "#/components/schemas/Id"
          readOnly: true
        phone:
          type: string
        email:
          type: string
    UserInfo:
      required:
        - user
        - isRegistrationComplete
        - accessToken
        - refreshToken
      properties:
        user:
          $ref: "#/components/schemas/User"
        isRegistrationComplete:
          type: boolean
        accessToken:
          type: string
        refreshToken: 
          type:
            string

    # Http Errors
    NotFound:
      type: object
      required:
        - detail
      properties:
        detail:
          description: Resource Not Found
          type: string
    BadRequest:
      type: object
      required:
        - detail
      properties:
        detail: 
          description: Request is not well formatted 
          type: string
    UnAuthorized:
      type: object
      required:
        - detail
      properties:
        detail:
          description: UnAuthorized Request
    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          description: A human readable error message
          type: string
  securitySchemes:
    basicHttpAuthentication:
      description: Basic HTTP Authentication
      type: http
      scheme: Basic
    BearerToken:
      description: Bearer token using a JWT
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []
  - BearerToken: []